name: Django-app workflow

on: [push]

jobs:
  tests:
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Запуск actions checkout — готового скрипта
    # для клонирования репозитория
    - uses: actions/checkout@v2
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта
      # для развёртывания окружения Python
      uses: actions/setup-python@v2
      with:
        # Выбор версии Python
        python-version: 3.7

    - name: Install dependencies
      run: |
        # обновление pip
        python -m pip install --upgrade pip
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r requirements.txt

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        # Проверка доступности репозитория Docker Hub для workflow
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        # Вызов сборщика контейнеров docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        # Запуск скрипта авторизации на Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        # Пуш образа в Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: rossanna/none:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: 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
+9qyHxwXOkDsSRQkPsWokXhXeY8=
        # key: ${{ secrets.SSH_KEY }} # ssh key in secrets git
        passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          # Выполняет pull образа с DockerHub
          sudo docker pull <имя-пользователя>/<имя-репозитория>
          #остановка всех контейнеров
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker run --rm -d -p 5000:5000 <имя-пользователя>/<имя-репозитория>
